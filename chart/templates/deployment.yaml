apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.finalName }}
  namespace: {{ .Values.deployment.namespace }}
  labels:
    marlin.app: {{ .Values.deployment.finalName }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.deployment.finalName }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.finalName }}
    spec:
      containers:
        - name: {{ .Values.deployment.finalName }}
          image: {{ .Values.deployment.image }}:{{ .Values.deployment.version }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: ADACTA_URL
              value: {{ .Values.deployment.AdactaUrl | quote }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.deployment.finalName }}-rest-service
  namespace: {{ .Values.deployment.namespace }}
spec:
  ports:
    -  port: 8080
       targetPort: 8080
       protocol: TCP
  selector:
    app: {{ .Values.deployment.finalName }}

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.deployment.finalName }}-rest-ingress
  namespace: {{ .Values.deployment.namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  rules:
    - host: {{ .Values.deployment.openapihost }}
      http:
        paths:
          - backend:
              serviceName: {{ .Values.deployment.finalName }}-rest-service
              servicePort: 8080
            path: /
  tls:
    - secretName: {{ .Values.deployment.secretNameOpenApi  }}
      hosts:
        - {{ .Values.deployment.openapihost  }}
